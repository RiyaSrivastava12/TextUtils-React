{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newtext","showAlert","trim","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.89be61dd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n    {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/*<li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n    </li>*/}\r\n      </ul>\r\n      {/*\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n      */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark' : 'light'}`}>\r\n        <input className=\"form-check-input \" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\nNavbar.propTypes={ \r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n      //  console.log(\"uppercase was clicked\" + text);  \r\n        let newtext= text.toUpperCase();\r\n        setText(newtext);\r\n        if(newtext==='')\r\n        {\r\n            props.showAlert(\"Enter text\",\"alert\")\r\n        }\r\n        else{\r\n            props.showAlert(\"Converted to uppercase \",\"success\")\r\n        }\r\n        \r\n    }\r\n    const handleLoClick = () => {\r\n        //  console.log(\"uppercase was clicked\" + text);  \r\n          let newtext= text.toLowerCase();\r\n          setText(newtext);\r\n          props.showAlert(\"Converted to lowercase \",\"success\")\r\n      }\r\n      const handleClearClick = () => {\r\n          let newtext= '';\r\n          setText(newtext);\r\n          props.showAlert(\"text cleared\",\"success\")\r\n      }\r\n      const handlespaces = () => {\r\n        let newtext= text.trim();\r\n        setText(newtext);\r\n        props.showAlert(\"Extra spaces cleared \",\"success\")\r\n    }\r\n    \r\n    const handleCopy = () => {\r\n        let newtext= document.getElementById(\"myBox\");\r\n        newtext.select();\r\n        navigator.clipboard.writeText(newtext.value);\r\n        props.showAlert(\"Text copied\",\"success\")\r\n    }\r\n    const handleOnChange = (event) => {\r\n       // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text,setText] = useState('');\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"container\" style ={{color :props.mode==='dark'?'white' : 'black'}}>\r\n                <h1>{props.heading} </h1>\r\n                <textarea className=\"form-control\" value={text} style ={{backgroundColor :props.mode==='dark'?'black' : 'white' , color :props.mode==='dark'?'white' : 'black' }} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary my-3 mx-3\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary my-3 \" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary my-3 mx-3\" onClick={handlespaces}>Trim Whitespaces</button>\r\n                <button className=\"btn btn-primary my-1 \" onClick={handleCopy}>Copy</button>\r\n            </div>\r\n            <div className=\"container my-3\" style ={{color :props.mode==='dark'?'white' : 'black'}}>\r\n                <h2>Your text summary </h2>\r\n                <p> {text.split(\" \").length}  words and {text.length} characters</p>\r\n                <p> {0.008*text.split(\" \").length}  minutes read</p>\r\n                <h2> Preview</h2>\r\n                <p> {text.length>0?text:\"Enter something in the textbox above to preview it here\"} </p>\r\n            </div>\r\n      </>\r\n        \r\n    )\r\n}\r\n\r\n","\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About'; \nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n{/*import{\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"; */}\n\n\n\nfunction App() {\n  const [mode , setMode] = useState('light');\n  const [alert , setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n      setAlert({\n        msg: message ,\n        type: type\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      },1500);\n\n  }\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Darkmode has been enabled\",\"success\");\n      setMode('dark');\n      document.title='TextUtils - DarkMode'\n      \n    }\n    else\n    {\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Lightmode has been enabled\",\"success\");\n      setMode('light');\n      document.title='TextUtils - LightMode'\n    }\n  }\n  return (\n    <>\n    {/*<Router> */}\n   <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n   <Alert alert={alert}/>\n   \n   <div className=\"container my-3\">\n   {/*<Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n   <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter text to analyze\" mode={mode}/>\n          {/*</Route>*/}\n          {/*</Router> */}\n        {/*</Switch>*/}\n   \n   </div>\n   {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}